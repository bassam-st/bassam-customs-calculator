<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>أسعار السلع بالدولار</title>
<style>
  body{font-family:'Noto Kufi Arabic',system-ui,sans-serif;background:#f1f5f9;margin:0}
  .top{background:#2563eb;color:#fff;padding:14px 16px}
  .wrap{max-width:880px;margin:16px auto;padding:0 12px}
  .card{background:#fff;border:1px solid #e5e7eb;border-radius:12px;box-shadow:0 4px 12px rgba(0,0,0,.05);padding:14px;margin-top:12px}
  .row{display:grid;grid-template-columns:1fr 160px 140px;gap:10px}
  label{display:block;font-size:13px;color:#475569;margin-bottom:4px}
  input,select,textarea{width:100%;padding:10px;border:1px solid #cbd5e1;border-radius:10px;background:#fff;font-size:14px}
  textarea{min-height:70px}
  .actions{display:flex;gap:10px;flex-wrap:wrap;margin-top:10px}
  .btn{border:none;border-radius:10px;padding:10px 14px;font-weight:700;cursor:pointer}
  .btn-blue{background:#2563eb;color:#fff}
  .btn-green{background:#16a34a;color:#fff}
  .btn-gray{background:#e2e8f0;color:#0f172a}
  .btn-orange{background:#f97316;color:#fff}
  .btn-red{background:#ef4444;color:#fff}
  .list .item{display:flex;justify-content:space-between;gap:10px;padding:10px;border-bottom:1px dashed #cbd5e1}
  .muted{color:#64748b;font-size:12px}
  .tag{display:inline-block;background:#eef2ff;color:#1e3a8a;border:1px solid #c7d2fe;padding:2px 8px;border-radius:999px;font-size:12px;margin-inline-start:6px}
  .nav{margin:10px 0}
  .nav a{display:inline-block;margin-left:8px;text-decoration:none;background:#e2e8f0;color:#0f172a;padding:8px 12px;border-radius:10px}
  @media(max-width:640px){.row{grid-template-columns:1fr}}
  .owner-bar{display:flex;gap:8px;align-items:center}
  .owner-bar input{max-width:200px}
  .owner-hint{font-size:12px;color:#475569}
</style>
</head>
<body>
  <div class="top"><b>💲 إدارة أسعار السلع (USD)</b></div>
  <div class="wrap">
    <div class="nav"><a href="./index.html">← العودة للحاسبة</a></div>

    <!-- شريط المالك -->
    <div class="card">
      <div class="owner-bar">
        <span>🔒 وضع المالك:</span>
        <input id="pin" type="password" placeholder="أدخل رمز المالك (PIN)" />
        <button class="btn btn-blue" id="unlockBtn">فتح</button>
        <button class="btn btn-gray" id="lockBtn">قفل</button>
        <span id="ownerState" class="owner-hint">الحالة: قراءة فقط</span>
      </div>
      <div class="owner-hint">ملاحظة: بدون فتح وضع المالك لا يمكن الإضافة/التعديل/الحذف أو الاستيراد/التصدير.</div>
    </div>

    <!-- نموذج الإضافة/التعديل (يظهر للمالك فقط) -->
    <div class="card" id="adminForm" style="display:none">
      <h3 style="margin:4px 0 10px">إضافة / تعديل سعر سلعة</h3>
      <div class="row">
        <div>
          <label>اسم السلعة</label>
          <input id="name" placeholder="مثال: شبك حديد (للطن) / بطاطس مجمدة (للطن)" />
        </div>
        <div>
          <label>السعر بالدولار</label>
          <input id="price" type="number" inputmode="decimal" placeholder="مثال: 1600" />
        </div>
        <div>
          <label>الوحدة</label>
          <select id="unit">
            <option value="ton">للطن</option>
            <option value="kg">للكيلو</option>
            <option value="dz">للدُزْن</option>
            <option value="pcs">للحبة</option>
            <option value="ltr">للتر</option>
            <option value="Ah">Ah (لكل أمبير/ساعة)</option>
          </select>
        </div>
      </div>
      <div style="margin-top:10px">
        <label>ملاحظات (اختياري)</label>
        <textarea id="notes" placeholder="مثال: مصدر السعر، تاريخ التحديث، جودة السلعة…"></textarea>
      </div>
      <div class="actions">
        <button class="btn btn-green" id="saveBtn">احفظ/حدّث</button>
        <button class="btn btn-gray" id="clearBtn">تفريغ النموذج</button>
        <span class="muted" id="msg" style="display:none">✔ تم الحفظ</span>
      </div>
    </div>

    <!-- أدوات الاستيراد/التصدير والبحث -->
    <div class="card">
      <div class="actions">
        <input id="q" placeholder="ابحث بالاسم… مثال: شبك، بطاطس، بطاريات" />
        <button class="btn btn-blue" id="exportBtn" disabled>تصدير JSON</button>
        <button class="btn btn-gray" id="importBtn" disabled>استيراد JSON</button>
        <input type="file" id="importFile" accept="application/json" style="display:none" />
      </div>
      <div class="list" id="list" style="margin-top:8px"></div>
    </div>
  </div>

<script>
  // —— إعداد رمز المالك (PIN) ——
  const ADMIN_PIN = "bassam1234"; // <-- غيّره برمزك الخاص

  // —— التحكّم في وضع المالك ——
  let isOwner = false;
  const pinEl = document.getElementById('pin');
  const unlockBtn = document.getElementById('unlockBtn');
  const lockBtn = document.getElementById('lockBtn');
  const ownerState = document.getElementById('ownerState');
  const adminForm = document.getElementById('adminForm');

  function updateOwnerUI(){
    ownerState.textContent = 'الحالة: ' + (isOwner ? 'مالك (تحرير مفعّل)' : 'قراءة فقط');
    adminForm.style.display = isOwner ? '' : 'none';
    document.getElementById('exportBtn').disabled = !isOwner;
    document.getElementById('importBtn').disabled = !isOwner;
  }
  unlockBtn.addEventListener('click', ()=>{
    if(pinEl.value === ADMIN_PIN){ isOwner = true; updateOwnerUI(); alert('✅ تم فتح وضع المالك'); }
    else { alert('❌ رمز غير صحيح'); }
  });
  lockBtn.addEventListener('click', ()=>{ isOwner = false; updateOwnerUI(); });

  // —— قاعدة البيانات ——
  const KEY = 'pricesCatalogV1';
  const nameEl = document.getElementById('name');
  const priceEl = document.getElementById('price');
  const unitEl = document.getElementById('unit');
  const notesEl = document.getElementById('notes');
  const saveBtn = document.getElementById('saveBtn');
  const clearBtn = document.getElementById('clearBtn');
  const msg = document.getElementById('msg');
  const q = document.getElementById('q');
  const list = document.getElementById('list');
  const exportBtn = document.getElementById('exportBtn');
  const importBtn = document.getElementById('importBtn');
  const importFile = document.getElementById('importFile');

  // تحميل JSON الأساسي من assets ثم دمجه مع LocalStorage (للعرض)
  let baseData = [];
  async function loadBase(){
    try{
      const r = await fetch('./assets/prices_catalog.json');
      baseData = await r.json();
    }catch(e){ baseData = []; }
  }

  function loadLocal(){ try{ return JSON.parse(localStorage.getItem(KEY)) || []; }catch{ return []; } }
  function saveLocal(arr){ localStorage.setItem(KEY, JSON.stringify(arr)); }

  function upsert(rec){
    if(!isOwner){ return alert('هذا الإجراء للمالك فقط'); }
    const arr = loadLocal();
    const idx = arr.findIndex(x => (x.name||'').trim() === (rec.name||'').trim());
    if(idx >= 0) arr[idx] = rec; else arr.push(rec);
    saveLocal(arr);
  }

  function del(name){
    if(!isOwner){ return alert('هذا الإجراء للمالك فقط'); }
    const arr = loadLocal().filter(x => (x.name||'') !== name);
    saveLocal(arr);
    render();
  }

  function applyToForm(rec){
    nameEl.value = rec.name || '';
    priceEl.value = rec.price || '';
    unitEl.value = rec.unit || 'ton';
    notesEl.value = rec.notes || '';
  }

  function unitLabel(u){
    return u==='ton'?'للطن':u==='kg'?'للكيلو':u==='dz'?'للدُزْن':u==='pcs'?'للحبة':u==='ltr'?'للتر':u==='Ah'?'Ah/أمبير':'';
  }

  function mergedData(){
    // الدمج: الأساس من الملف + تعديلاتك المحلية (الأولوية للمحلي على الاسم نفسه)
    const local = loadLocal();
    const map = new Map();
    baseData.forEach(x => map.set((x.name||'').trim(), x));
    local.forEach(x => map.set((x.name||'').trim(), x));
    return Array.from(map.values());
  }

  function render(){
    const arr = mergedData();
    const s = (q.value||'').trim();
    const filtered = s ? arr.filter(x => (x.name||'').includes(s)) : arr;

    if(!filtered.length){ list.innerHTML = '<div class="muted" style="padding:10px">لا توجد بيانات…</div>'; return; }

    list.innerHTML = filtered.map(x => `
      <div class="item">
        <div>
          <div><b>${x.name}</b> <span class="tag">${unitLabel(x.unit)}</span></div>
          <div class="muted">${x.price} USD ${x.notes?(' • '+x.notes):''}</div>
        </div>
        <div style="display:flex;gap:8px">
          <button class="btn btn-green" onclick="location.href='./index.html?value=${encodeURIComponent(x.price)}'">استخدام السعر</button>
          ${isOwner ? `
            <button class="btn btn-orange" onclick='(function(n){const rec = mergedData().find(r=>r.name===n); if(rec){ window.applyToForm(rec);} })(${JSON.stringify(x.name)})'>تعديل</button>
            <button class="btn btn-red" onclick="del(${JSON.stringify(x.name)})">حذف</button>
          ` : ``}
        </div>
      </div>
    `).join('');
  }

  document.getElementById('saveBtn')?.addEventListener('click', ()=>{
    if(!isOwner){ return alert('هذا الإجراء للمالك فقط'); }
    const rec = {
      name: (nameEl.value||'').trim(),
      price: parseFloat(priceEl.value||'0'),
      unit: (unitEl.value||'ton'),
      notes: (notesEl.value||'').trim()
    };
    if(!rec.name){ alert('اكتب اسم السلعة'); return; }
    if(!rec.price){ alert('اكتب السعر بالدولار'); return; }
    upsert(rec);
    msg.style.display='inline'; setTimeout(()=>msg.style.display='none',1200);
    render();
  });

  document.getElementById('clearBtn')?.addEventListener('click', ()=>{
    nameEl.value=''; priceEl.value=''; unitEl.value='ton'; notesEl.value='';
  });

  q.addEventListener('input', render);

  exportBtn.addEventListener('click', ()=>{
    if(!isOwner){ return alert('هذا الإجراء للمالك فقط'); }
    const data = JSON.stringify(mergedData(), null, 2);
    const blob = new Blob([data], {type:'application/json'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a'); a.href = url; a.download = 'prices_catalog.json';
    document.body.appendChild(a); a.click(); a.remove(); setTimeout(()=>URL.revokeObjectURL(url), 500);
  });

  importBtn.addEventListener('click', ()=> {
    if(!isOwner){ return alert('هذا الإجراء للمالك فقط'); }
    importFile.click();
  });

  importFile.addEventListener('change', async ()=>{
    if(!isOwner){ return; }
    const f = importFile.files[0]; if(!f) return;
    try{
      const text = await f.text();
      const arr = JSON.parse(text);
      if(!Array.isArray(arr)) throw new Error('صيغة غير صحيحة (توقعنا مصفوفة)');
      const cleaned = arr
        .filter(x=>x && typeof x==='object')
        .map(x=>({
          name: String(x.name||'').trim(),
          price: Number(x.price||0),
          unit: (x.unit||'ton'),
          notes: String(x.notes||'').trim()
        }))
        .filter(x=>x.name && x.price>0);
      // نخزنها محليًا كنسخة المالك (لن تُرفع تلقائيًا)
      saveLocal(cleaned);
      render(); alert('تم الاستيراد: '+cleaned.length+' عنصر');
    }catch(e){ alert('تعذّر الاستيراد: '+e.message); }
    finally{ importFile.value=''; }
  });

  // بدء: تحميل الملف الأساسي ثم العرض
  (async function(){
    await loadBase();
    updateOwnerUI();
    render();
  })();

  // تعريض الدوال للاستخدام داخل onclick
  window.applyToForm = applyToForm;
  window.mergedData = mergedData;
</script>
</body>
</html>
